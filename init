#!/bin/bash
# This script load zfs kernel module for any archiso.
# github.com/eoli3n
# Thanks to CalimeroTeknik on #archlinux-fr, FFY00 on #archlinux-projects, JohnDoe2 on #regex

print () {
    echo -e "\n\033[1m> $1\033[0m\n"
}

print "Testing if archiso is running"

grep archiso /proc/cmdline > /dev/null

print "Increasing cowspace to half of RAM"

mount -o remount,size=50% /run/archiso/cowspace

# Get running kernel version
# https://github.com/archzfs/archzfs/issues/337#issuecomment-624312576
kernel_version=$(pacman -Qi linux | sed -n 's/^Version\s*: //p')
kernel_version_fixed=$(sed 's/-/\./' <<< $kernel_version)

print "Adding archzfs repo"

cat >> /etc/pacman.conf <<"EOF"
[archzfs]
Server = http://archzfs.com/archzfs/x86_64
Server = http://mirror.sum7.eu/archlinux/archzfs/archzfs/x86_64
Server = https://mirror.biocrafting.net/archlinux/archzfs/archzfs/x86_64
EOF

print "Fetching archzfs signing keys"

pacman-key --recv-keys F75D9D76
pacman-key --lsign-key F75D9D76

print "Current kernel version is $kernel_version"

# Set regex to match package
regex='href="\Kzfs-linux-[0-9].*?'"$kernel_version_fixed"'.*?(?!.+\.sig)x86_64[^\"]+'
# href="               # match href="
# \K                   # don't return anything matched prior to this point
# zfs-linux-\d         # find me zfs-linux-#
# .*?                  # match anything but newlines 0 or more times, as few times as possible (non-greedy)
# '"$kernel_version"'  # match version and escape with shell
# .*?                  # match anything but newlines 0 or more times, as few times as possible (non-greedy)
# (?![^"\n]+\.sig)     # remove .sig matches
# x86_64               # now match architecture
# [^\n"]+              # continue matching anything but newlines and ", 1 or more times, until end 

# Set archzfs URLs list
urls="http://archzfs.com/archzfs/x86_64/ http://archzfs.com/archive_archzfs/"

# Loop search
for url in $urls
do

    print "Searching on $url..."

    # Query url and try to match package
    package=$(curl -s "$url" | grep -Po "$regex" | tail -n 1)

    # If a package is found
    if [[ ! -z $package ]]
    then

        print "$package found"

        # Break loop
        break
    fi
done

# If a package is found
if [[ ! -z $package ]]
then
    # Build package url
    package_url="$url$package"

    print "Installing package $package..."

    # Install package
    pacman -U "$package_url"

    print "Loading zfs kernel module"

    # Load kernel module
    modprobe zfs && print "ZFS module is working"

else
    print "No module found for current kernel version on Archzfs repos"
fi
